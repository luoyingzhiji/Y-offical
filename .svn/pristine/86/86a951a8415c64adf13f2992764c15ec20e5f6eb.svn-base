import Vue from 'vue'
import Router from 'vue-router'
import { interopDefault } from './utils'

const _1256ce9c = () => interopDefault(import('../pages/a/index.vue' /* webpackChunkName: "pages/a/index" */))
const _404d2be5 = () => interopDefault(import('../pages/About.vue' /* webpackChunkName: "pages/About" */))
const _0fa708cc = () => interopDefault(import('../pages/Address.vue' /* webpackChunkName: "pages/Address" */))
const _daf82e64 = () => interopDefault(import('../pages/Article.vue' /* webpackChunkName: "pages/Article" */))
const _266d75ce = () => interopDefault(import('../pages/enterprise.vue' /* webpackChunkName: "pages/enterprise" */))
const _4679d6f7 = () => interopDefault(import('../pages/Exam.vue' /* webpackChunkName: "pages/Exam" */))
const _b812e5ce = () => interopDefault(import('../pages/Help.vue' /* webpackChunkName: "pages/Help" */))
const _6884375b = () => interopDefault(import('../pages/register.vue' /* webpackChunkName: "pages/register" */))
const _70f9d7cc = () => interopDefault(import('../pages/School.vue' /* webpackChunkName: "pages/School" */))
const _f965dd28 = () => interopDefault(import('../pages/slid.vue' /* webpackChunkName: "pages/slid" */))
const _5f7d2aee = () => interopDefault(import('../pages/Trial.vue' /* webpackChunkName: "pages/Trial" */))
const _6827d5f3 = () => interopDefault(import('../pages/video.vue' /* webpackChunkName: "pages/video" */))
const _561d9176 = () => interopDefault(import('../pages/Xcx.vue' /* webpackChunkName: "pages/Xcx" */))
const _0c98ee21 = () => interopDefault(import('../pages/mobile/Article.vue' /* webpackChunkName: "pages/mobile/Article" */))
const _e1e899ba = () => interopDefault(import('../pages/a/_link.vue' /* webpackChunkName: "pages/a/_link" */))
const _2eda326c = () => interopDefault(import('../pages/index.vue' /* webpackChunkName: "pages/index" */))

Vue.use(Router)

if (process.client) {
  if ('scrollRestoration' in window.history) {
    window.history.scrollRestoration = 'manual'

    // reset scrollRestoration to auto when leaving page, allowing page reload
    // and back-navigation from other pages to use the browser to restore the
    // scrolling position.
    window.addEventListener('beforeunload', () => {
      window.history.scrollRestoration = 'auto'
    })

    // Setting scrollRestoration to manual again when returning to this page.
    window.addEventListener('load', () => {
      window.history.scrollRestoration = 'manual'
    })
  }
}
const scrollBehavior = function (to, from, savedPosition) {
  // if the returned position is falsy or an empty object,
  // will retain current scroll position.
  let position = false

  // if no children detected and scrollToTop is not explicitly disabled
  if (
    to.matched.length < 2 &&
    to.matched.every(r => r.components.default.options.scrollToTop !== false)
  ) {
    // scroll to the top of the page
    position = { x: 0, y: 0 }
  } else if (to.matched.some(r => r.components.default.options.scrollToTop)) {
    // if one of the children has scrollToTop option set to true
    position = { x: 0, y: 0 }
  }

  // savedPosition is only available for popstate navigations (back button)
  if (savedPosition) {
    position = savedPosition
  }

  return new Promise((resolve) => {
    // wait for the out transition to complete (if necessary)
    window.$nuxt.$once('triggerScroll', () => {
      // coords will be used if no selector is provided,
      // or if the selector didn't match any element.
      if (to.hash) {
        let hash = to.hash
        // CSS.escape() is not supported with IE and Edge.
        if (typeof window.CSS !== 'undefined' && typeof window.CSS.escape !== 'undefined') {
          hash = '#' + window.CSS.escape(hash.substr(1))
        }
        try {
          if (document.querySelector(hash)) {
            // scroll to anchor by returning the selector
            position = { selector: hash }
          }
        } catch (e) {
          console.warn('Failed to save scroll position. Please add CSS.escape() polyfill (https://github.com/mathiasbynens/CSS.escape).')
        }
      }
      resolve(position)
    })
  })
}

export function createRouter() {
  return new Router({
    mode: 'history',
    base: decodeURI('/'),
    linkActiveClass: 'nuxt-link-active',
    linkExactActiveClass: 'nuxt-link-exact-active',
    scrollBehavior,

    routes: [{
      path: "/a",
      component: _1256ce9c,
      name: "a"
    }, {
      path: "/About",
      component: _404d2be5,
      name: "About"
    }, {
      path: "/Address",
      component: _0fa708cc,
      name: "Address"
    }, {
      path: "/Article",
      component: _daf82e64,
      name: "Article"
    }, {
      path: "/enterprise",
      component: _266d75ce,
      name: "enterprise"
    }, {
      path: "/Exam",
      component: _4679d6f7,
      name: "Exam"
    }, {
      path: "/Help",
      component: _b812e5ce,
      name: "Help"
    }, {
      path: "/register",
      component: _6884375b,
      name: "register"
    }, {
      path: "/School",
      component: _70f9d7cc,
      name: "School"
    }, {
      path: "/slid",
      component: _f965dd28,
      name: "slid"
    }, {
      path: "/Trial",
      component: _5f7d2aee,
      name: "Trial"
    }, {
      path: "/video",
      component: _6827d5f3,
      name: "video"
    }, {
      path: "/Xcx",
      component: _561d9176,
      name: "Xcx"
    }, {
      path: "/mobile/Article",
      component: _0c98ee21,
      name: "mobile-Article"
    }, {
      path: "/a/:link",
      component: _e1e899ba,
      name: "a-link"
    }, {
      path: "/",
      component: _2eda326c,
      name: "index"
    }],

    fallback: false
  })
}
